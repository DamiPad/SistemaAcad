// <auto-generated />
using System;
using AcademySystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcademySystem.Migrations
{
    [DbContext(typeof(AcademySystemContext))]
    partial class AcademySystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AcademySystem.Models.Asignacion", b =>
                {
                    b.Property<int>("AsignacionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoID");

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("InstructorID");

                    b.HasKey("AsignacionID");

                    b.HasIndex("CursoID");

                    b.HasIndex("InstructorID");

                    b.ToTable("Asignacion");
                });

            modelBuilder.Entity("AcademySystem.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carrera")
                        .HasMaxLength(58);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(256);

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CategoriaID");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("AcademySystem.Models.Curso", b =>
                {
                    b.Property<int>("CursoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaID");

                    b.Property<decimal>("Costo");

                    b.Property<byte>("Creditos");

                    b.Property<string>("Description")
                        .HasMaxLength(512);

                    b.Property<bool>("Estado");

                    b.Property<byte>("Horas");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.HasKey("CursoID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("AcademySystem.Models.Estudiante", b =>
                {
                    b.Property<int>("EstudianteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(20);

                    b.Property<int>("PersonaID");

                    b.HasKey("EstudianteID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("AcademySystem.Models.Inscripcion", b =>
                {
                    b.Property<int>("InscripcionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoID");

                    b.Property<int>("EstudianteID");

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("Grado");

                    b.Property<decimal>("Pago");

                    b.HasKey("InscripcionID");

                    b.HasIndex("CursoID");

                    b.HasIndex("EstudianteID");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("AcademySystem.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Especialidad")
                        .HasMaxLength(30);

                    b.Property<int>("PersonaID");

                    b.HasKey("InstructorID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("AcademySystem.Models.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(30);

                    b.Property<string>("Direccion")
                        .HasMaxLength(50);

                    b.Property<string>("Documento");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nombres")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasMaxLength(10);

                    b.HasKey("PersonaID");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("AcademySystem.Models.Asignacion", b =>
                {
                    b.HasOne("AcademySystem.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AcademySystem.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AcademySystem.Models.Curso", b =>
                {
                    b.HasOne("AcademySystem.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AcademySystem.Models.Estudiante", b =>
                {
                    b.HasOne("AcademySystem.Models.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AcademySystem.Models.Inscripcion", b =>
                {
                    b.HasOne("AcademySystem.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AcademySystem.Models.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AcademySystem.Models.Instructor", b =>
                {
                    b.HasOne("AcademySystem.Models.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
